<?php //%255BApp%255CEntity%255CProduct%2524productName%255D%255B1%255D

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
    ],
    null,
    [
        'stdClass' => [
            'groups' => [
                [
                    'Default',
                ],
                [
                    'Default',
                ],
                [
                    'Default',
                ],
            ],
            'message' => [
                1 => 'the product name can only contains digit, space and letters',
            ],
            'pattern' => [
                1 => '/^[a-z0-9 ]+$/i',
            ],
            'maxMessage' => [
                2 => 'the product name cannot be longer than {{ limit }} characters',
            ],
            'max' => [
                2 => 50,
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[2],
    ],
    []
); }];
